/*=======================================
 * Created by Atsushi Umakatsu on 27.12.2018.
 /=======================================*/

/*jslint node: true */
'use strict';

var sanitize = require('./sanitize');


/*==================================================
 * Takes the JSON file, generated by the license-checker from
 * and puts its contents into a html table
 /==================================================*/

function createHTML(json, grunt) {

    var output = `
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>PreferenceSpecifiers</key>
    <array>
`;

    /*
     * Get the name of every top node inside the json.
     * In this case, the node name is the name of the package, that we are currently looking at.
     */
    var packageNames = Object.getOwnPropertyNames(json);

    packageNames.forEach(function (packageName) {
        var repoUrl = sanitize.parseUrl(json[packageName].repository);

        output += `
      <dict>
        <key>Title</key>
        <string>${packageName}</string>
        <key>Type</key>
        <string>PSGroupSpecifier</string>
        <key>FooterText</key>
        <string>${json[packageName].licenseText}</string>
      </dict>`;
        //
        // // Filter undefined urls
        // if(repoUrl) {
        //   output += '\n<td><a href="' + repoUrl + '" target="_blank">' + repoUrl + '</a></td>\n</tr>';
        // }
        // else {
        //   output += '\n<td><span class="error">Undefined</span></td>\n</tr>';
        // }
    });

    if (grunt.config.data['grunt-license-report'].output.font) {
      output += `
        <dict>
          <key>Title</key>
          <string>Google Noto Fonts</string>
          <key>Type</key>
          <string>PSGroupSpecifier</string>
          <key>FooterText</key>
          <string>https://ja.osdn.net/projects/opensource/wiki/SIL_Open_Font_License_1.1</string>
        </dict>`;
    }

    output += `
    </array>
    <key>Title</key>
    <string>Licenses</string>
    <key>StringsTable</key>
    <string>Licenses</string>
  </dict>
</plist>`;

    return output;
}


exports.createHTML = createHTML;
